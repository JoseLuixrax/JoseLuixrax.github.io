1.-Mostrar los títulos de los libros con la etiqueta "titulo".

for $titulo in /bookstore/book/title/text()
return <titulo>{$titulo}</titulo>​​

2.-Mostrar los libros cuyo precio sea menor o igual a 30. Primero incluyendo la condición en la cláusula "where" y luego en la ruta del XPath.

for $libro in /bookstore/book
where $libro/price <= 30
return $libro

3.-Mostrar sólo el título de los libros cuyo precio sea menor o igual a 30.

for $libro in /bookstore/book
where $libro/price <= 30
return $libro/title

4.-Mostrar sólo el título sin atributos de los libros cuyo precio sea menor o igual a 30.

for $libro in /bookstore/book[price<=30]
return <title>{$libro/title/text()}</title>

5.-Mostrar el título y el autor de los libros del año 2005, y etiquetar cada uno de ellos con "lib2005".

for $libro in /bookstore/book
where $libro/year=2005
return <lib2005>{$libro/title,$libro/author}</lib2005>

6.-Mostrar los años de publicación, primero con "for" y luego con "let" para comprobar la diferencia entre ellos. Etiquetar la salida con "publicacion".

for $year in /bookstore/book/year
return <publicacion>{$year}</publicacion>

let $year := /bookstore/book/year
return <publicacion>{$year}</publicacion>

7.-Mostrar los libros ordenados primero por "category" y luego por "title" en una sola consulta.

for $libro in /bookstore/book
order by $libro/@category,$libro/title
return $libro

8.-Mostrar cuántos libros hay, y etiquetarlo con "total".

let $num_libro := count(/bookstore/book)
return <total>{$num_libro}</total>

9.-Mostrar los títulos de los libros y al final una etiqueta con el número total de libros.

let $total := count (/bookstore/book),
    $titulos := (
      for $libro in /bookstore/book/title 
      return <titulo>{$libro/text()}</titulo>) 
return 
      <resultado>
        {$titulos}
        <total_libros>{$total}</total_libros>
      </resultado>

10.-Mostrar el precio mínimo y máximo de los libros.

let $max := max(/bookstore/book/price), 
    $min := min(/bookstore/book/price)
return
<resultado>
  <max>{$max}</max>
  <min>{$min}</min>
</resultado>

11.-Mostrar el título del libro, su precio y su precio con el IVA incluido, cada uno con su propia etiqueta. Ordénalos por precio con IVA.

for $libro in /bookstore/book
let $precio_iva := ($libro/price * 1.21)
order by $precio_iva
return 
<libro>
  <titulo>{$libro/title/text()}</titulo>
  <precio>{$libro/price/text()} €</precio>
  <precio_iva>{$precio_iva} €</precio_iva>
</libro>

12.-Mostrar la suma total de los precios de los libros con la etiqueta "total".

let $libros := /bookstore/book
return <total>{sum($libros/price)}</total>

13.-Mostrar cada uno de los precios de los libros, y al final una nueva etiqueta con la suma de los precios.


<libros>
{
  for $libro in /bookstore/book
  return $libro/price
}
{
  let $libros := /bookstore/book
  return <total>{sum($libros/price)}</total>
}
</libros>

14.-Mostrar el título y el número de autores que tiene cada título en etiquetas diferentes.

for $libro in /bookstore/book
return 
  <libro>
    {$libro/title}
    <autores>{count($libro/author)}</autores>
  </libro>

15.-Mostrar en la misma etiqueta el título y entre paréntesis el número de autores que tiene ese título.

for $libro in /bookstore/book
return <libro>{$libro/title/text()} ({count($libro/author)})</libro>

16.-Mostrar los libros escritos en años que terminen en "3".

for $libro in /bookstore/book
where ends-with($libro/year, "3")
return $libro

17.-Mostrar los libros cuya categoría empiece por "C".

for $libro in /bookstore/book
where starts-with($libro/@category, "C")
return $libro

18.-Mostrar los libros que tengan una "X" mayúscula o minúscula en el título ordenados de manera descendente.

for $libro in /bookstore/book
where contains($libro/title, "x") or contains($libro/title, "X")
order by $libro/title descending
return $libro

19.-Mostrar el título y el número de caracteres que tiene cada título, cada uno con su propia etiqueta.

for $libro in /bookstore/book
return 
  <libro>
    {$libro/title}
    <length>{string-length($libro/title)}</length>
  </libro>

20.-Mostrar todos los años en los que se ha publicado un libro eliminando los repetidos. Etiquétalos con "año".

for $año in distinct-values(/bookstore/book/year)
return <año>{$año}</año>

21.-Mostrar todos los autores eliminando los que se repiten y ordenados por el número de caracteres que tiene cada autor.

for $autor in distinct-values(/bookstore/book/author)
order by string-length($autor)
return <autor>{$autor}</autor>

22.-Mostrar los títulos en una tabla de HTML.

<table>
{
  for $libro in /bookstore/book
  return 
    <tr>
      <td>{$libro/title/text()}</td>
    </tr>
}
</table>

23.-Mostrar en una tabla de HTML los nombres de los bailes y su profesor, cada uno en una fila.

<table> {
  for $baile in /bailes/baile
  return <tr><td>{$baile/nombre/text()}</td><td>{$baile/profesor/text()}</td></tr>
} </table>

24.-Mostrar todos los datos de cada baile excepto la fecha de comienzo y de fin.

for $baile in /bailes/baile
return <baile>{$baile/* except $baile/comienzo except $baile/fin}</baile>

25.-Mostrar el nombre del baile, su precio y el precio con un descuento del 15% para familias numerosas. Ordenar por el nombre del baile

for $baile in /bailes/baile
order by $baile/nombre
return 
   <baile>
      {$baile/nombre}
      <precio>{$baile/precio/text()}</precio>
      <fam_numerosa>{$baile/precio * 0.85}</fam_numerosa>
   </baile>

26.-Mostrar el dinero que ganaría la profesora "Laura Mendiola" si se completaran todas las plazas de su baile, sabiendo que sólo tiene un baile.

let $baile := /bailes/baile[profesor = "Laura Mendiola"]
return $baile/plazas * $baile/precio